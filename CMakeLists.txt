cmake_minimum_required(VERSION 3.7)

# Name of this project
project(proto_rpc_example)

add_subdirectory(proto_rpc)

# Existing libraries this project uses
find_package(
    Boost REQUIRED
    program_options
    system
)
find_package(
    Protobuf REQUIRED
)

# Location of include files
include_directories(
    proto_rpc/include
    ${Boost_INCLUDE_DIRS}
    ${PROTOBUF_INCLUDE_DIRS}
    ${CMAKE_CURRENT_BINARY_DIR} # for files generated by protoc
)

# Example service library
add_custom_command(
    OUTPUT dictionary_service.pb.h dictionary_service.pb.cc
    COMMAND protoc --cpp_out=${CMAKE_CURRENT_BINARY_DIR} dictionary_service.proto
    DEPENDS proto/dictionary_service.proto
    WORKING_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}/proto
)
add_library(
    dictionary_service
    ${CMAKE_CURRENT_BINARY_DIR}/dictionary_service.pb.cc
)

# Example executables
add_executable(
    dictionary_server
    src/dictionary_server.cpp
)
add_executable(
    dictionary_client
    src/dictionary_client.cpp
)

# Compile options
target_compile_options(
    dictionary_server PRIVATE
    "/D_WIN32_WINNT=0x0501"
)
target_compile_options(
    dictionary_client PRIVATE
    "/D_WIN32_WINNT=0x0501"
)

# Library dependences
target_link_libraries(
    dictionary_service
    ${PROTOBUF_LIBRARIES}
)
target_link_libraries(
    dictionary_server
    proto_rpc
    dictionary_service
)
target_link_libraries(
    dictionary_client
    proto_rpc
    dictionary_service
)